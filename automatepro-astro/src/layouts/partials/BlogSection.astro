---
import BlogCard from "@/components/BlogCard.astro";
import PrimaryButton from "@/components/PrimaryButton.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";
import { getEntry } from "astro:content";

interface sectionDataActionButton {
  enable: boolean;
  label: string;
  link: string;
}

interface SectionData {
  enable: boolean;
  badge: string;
  title: string;
  button: sectionDataActionButton;
  settings: {
    limitBlogs: number;
  };
}

const sectionData = await getEntry("sections", "blogssection");
const { title, badge, enable, button, settings } = sectionData.data as SectionData;

// Fetch blog posts
const COLLECTION_FOLDER = "blog";
const posts = await getSinglePage(COLLECTION_FOLDER);
let sortedPosts = sortByDate(posts);
const visiblePosts = sortedPosts.slice(0, settings.limitBlogs);
---

{
  enable && (
    <section class="section">
      <div class="container">
        <div class="section-container items-center">
          <div class="section-intro text-center xl:max-w-[600px] mx-auto">
            {badge && (
              <div class="section-badge badge badge-gradient" data-aos="fade-up-sm" data-aos-delay="100">
                {badge}
              </div>
            )}
            {title && (
              <h2 class="title" data-aos="fade-up-sm" data-aos-delay="150">
                {title}
              </h2>
            )}
          </div>
          <div class="section-content">
            <div class="grid  md:grid-cols-2 lg:grid-cols-3 gap-6">
              {visiblePosts &&
                visiblePosts.length > 0 &&
                visiblePosts.map((post, index) => {
                  const aosDelay = 100 * (index % 3);
                  return <BlogCard data={post} data-aos="fade-up-sm" data-aos-delay={aosDelay} />;
                })}
            </div>
          </div>
          {button.enable && <PrimaryButton as="a" label={button.label} link={button.link} />}
        </div>
      </div>
    </section>
  )
}
