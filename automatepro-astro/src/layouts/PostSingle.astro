---
import { getSinglePage } from "@/lib/contentParser.astro";
import dateFormat from "@/lib/utils/dateFormat";
import { humanize, markdownify, slugify } from "@/lib/utils/textConverter";
import ImageMod from "./components/ImageMod.astro";
import Disqus from "./helpers/Disqus";

const { post } = Astro.props;

const { Content } = await post.render();
const { title, author, image, date } = post.data;
const authorList = await getSinglePage("authors");
const postAuthor = authorList && authorList.filter((a: any) => a.data.title === author)[0];
---

<section class="hero-gradient-section bg-gradient-to-tl pb-10">
  <div class="container lg:max-w-[1079px] w-full mx-auto flex flex-col items-center">
    {
      date && (
        <div class="text-sm text-center mb-4">
          <span class="text-dark font-medium mr-2">Publish Date</span>
          <div class="badge badge-white border border-dark ">{dateFormat(date)}</div>
        </div>
      )
    }

    <h1
      class="lg:text-h1 lg:leading-[1.2] text-center mb-6 text-balance"
      data-aos="fade-up-sm"
      data-aos-delay="0"
      set:html={markdownify(title)}
    />

    <div class="flex items-center gap-4 font-medium mb-20">
      <ImageMod
        class="size-16 rounded-full"
        width={64}
        height={64}
        src={postAuthor.data.image || ""}
        alt={postAuthor.data.title}
      />
      <a href={`/authors/${slugify(postAuthor.slug)}`}>
        <p class="text-dark">{humanize(postAuthor.data.title)}</p>
        <span class="text-sm">Full-Stack Developer</span>
      </a>
    </div>

    <ImageMod
      src={image}
      width={1200}
      height={475}
      alt="thumbnail"
      class="h-[350px] lg:h-[500px] w-full rounded-3xl object-cover"
    />
  </div>
</section>
<section class="section">
  <div class="container lg:max-w-[1079px] mx-auto flex flex-col items-center">
    <div class="content w-full">
      <Content />
      <Disqus className="mt-20" client:load />
    </div>
  </div>
</section>
