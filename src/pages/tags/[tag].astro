---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';

interface Post {
  url: string;
  frontmatter: {
    title: string;
    tags?: string[];
  };
}

export async function getStaticPaths() {
  const allPosts = Object.values(await import.meta.glob('../posts/*.md', { eager: true })) as Post[];

  return [
    {params: {tag: "astro"}, props: {posts: allPosts}},
    {params: {tag: "successes"}, props: {posts: allPosts}},
    {params: {tag: "community"}, props: {posts: allPosts}},
    {params: {tag: "blogging"}, props: {posts: allPosts}},
    {params: {tag: "setbacks"}, props: {posts: allPosts}},
    {params: {tag: "learning in public"}, props: {posts: allPosts}}
  ];
}

const { tag } = Astro.params;
const { posts } = Astro.props as { posts: Post[] };  // Cast props to the Post array type
const filteredPosts = posts.filter((post) => post.frontmatter.tags?.includes(tag));


---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {filteredPosts.map((post) => <BlogPost url={post.url} title={post.frontmatter.title}/>)}
  </ul>
</BaseLayout>